const fs = require('fs').promises;
const path = require('path');

// Function to remove tone marks from pinyin
function removeToneMarks(pinyin) {
  const toneMap = {
    'ƒÅ': 'a', '√°': 'a', '«é': 'a', '√†': 'a',
    'ƒì': 'e', '√©': 'e', 'ƒõ': 'e', '√®': 'e',
    'ƒ´': 'i', '√≠': 'i', '«ê': 'i', '√¨': 'i',
    '≈ç': 'o', '√≥': 'o', '«í': 'o', '√≤': 'o',
    '≈´': 'u', '√∫': 'u', '«î': 'u', '√π': 'u',
    '«ñ': 'v', '«ò': 'v', '«ö': 'v', '«ú': 'v',
    '≈Ñ': 'n', '≈à': 'n', '«π': 'n',
    '·∏ø': 'm', 'mÃÄ': 'm'
  };
  
  return pinyin.split('').map(char => toneMap[char] || char).join('');
}

async function fixSlugs() {
  const blogDir = path.join(__dirname, '../content/blog');
  const files = await fs.readdir(blogDir);
  
  let renamedCount = 0;
  
  for (const file of files) {
    if (!file.endsWith('.md')) continue;
    
    // Extract date and pinyin parts
    const match = file.match(/^(\d{4}-\d{2}-\d{2})-(.+)\.md$/);
    if (!match) continue;
    
    const [, date, pinyinPart] = match;
    const cleanPinyin = removeToneMarks(pinyinPart);
    
    if (pinyinPart !== cleanPinyin) {
      const oldPath = path.join(blogDir, file);
      const newFilename = `${date}-${cleanPinyin}.md`;
      const newPath = path.join(blogDir, newFilename);
      
      await fs.rename(oldPath, newPath);
      console.log(`Renamed: ${file} ‚Üí ${newFilename}`);
      renamedCount++;
    }
  }
  
  console.log(`\n‚úÖ Slug fixing complete!`);
  console.log(`üìù Total files renamed: ${renamedCount}`);
}

fixSlugs().catch(console.error);